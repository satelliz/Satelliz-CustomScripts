import satelliz_agent_api
version = "0.4.beta"

import re

'''
This script provide monitoring of out of low memory behavior on i368 32bit linux systems
To deploy it - just click on "add plugin" link on your server page on Satelliz portal
then select "Custom Script Plugin" and in "Script name" field provide following URL:
https://raw.github.com/satelliz/Satlliz-CustomScripts/master/linux/32bit/lowmem

After installation plugin you will need to tune limits for new sensor.
Settings are in KB (so limits to set probably may be following: min_critical=30000 min_warning=50000)
Also we recommend to set sensitivity for sensor bigger then 1 to avoid alerts during short term memory usage. 

'''

metric_description = {
    'LowMemStatus': {
        'low_mem_total': { 'description': 'LowMem Total', 'style': 'line', 'units': 'KB', 'limits': 0},
        'low_mem_free':  { 'description': 'LowMem Free', 'style': 'area', 'units': 'KB', 'limits': 1}
    }}


def get_meminfo():
    re_parser = re.compile(r'^(?P<key>\S*):\s*(?P<value>\d*)\s*kB')
    result = dict()
    for line in open('/proc/meminfo'):
        match = re_parser.match(line)
        if not match:
            continue # skip lines that don't parse
        key, value = match.groups(['key', 'value'])
        result[key] = int(value)
    return result

def main(conf):
    mem=get_meminfo()

    satelliz_agent_api.add_metric('LowMemStatus', 0, {'low_mem_total': float(mem['LowTotal']), 'low_mem_free': mem['LowFree']}, "LowMem FREE: %i KB" % mem['LowFree'], metric_description.get('LowMemStatus'))
